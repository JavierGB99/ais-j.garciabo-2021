# This is a basic workflow to help you get started with Actions

name: Alltests_Heroku_smokeTests

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      
      - name: Test Unitario
        run: mvn -B '-Dtest=es.urjc.code.daw.library.unitary.*Test' test
        
      - name: Test Rest
        run: mvn -B '-Dtest=es.urjc.code.daw.library.e2e.rest.*Test' test
        
      - name: Test Selenium
        run: mvn -B '-Dtest=es.urjc.code.daw.library.e2e.selenium.*Test' test
        
      - name: Build native with Maven without Tests
        run: mvn -B package -DskipTests
        
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: target
          path: target/*.jar
          retention-days: 1
          
  publish_in_heroku_registry:
  
    name: Publish in Heroku Registry
    runs-on: ubuntu-20.04
    needs: [build]
    
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      HEROKU_APP: ${{ secrets.HEROKU_APP }}
      
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
      - name: Download Jar from previous job
        uses: actions/download-artifact@v1
        with:
          name: target
      - name: Build Docker Image
        run: docker build -t items .
      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
      - name: Change image name to point to Heroku registry
        run: docker tag items registry.heroku.com/$HEROKU_APP/web
      - name: Login in Heroku container registry
        run: heroku container:login
      - name: Push image to Heroku Registry
        run: docker push registry.heroku.com/$HEROKU_APP/web

  deploy_to_heroku:
  
    name: Deploy to Heroku
    runs-on: ubuntu-20.04
    needs: [publish_in_heroku_registry]
    
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      HEROKU_APP: ${{ secrets.HEROKU_APP }}
      
    steps:
      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
      - name: Login in Heroku
        run: heroku container:login
      - name: Deploy to Heroku
        run: heroku container:release web
        
  smoke_test:
    name: Smoke Tests
    runs-on: ubuntu-20.04
    needs: [deploy_to_heroku]
    
    env:
      HEROKU_APP: ${{ secrets.HEROKU_APP }}
    
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
      - name: Run REST test
        run: mvn -B '-Dtest=es.urjc.code.daw.library.e2e.rest.*Test' -Dhost="$HEROKU_APP.herokuapp.com" test
      - name: Run Selenium test
        run: mvn -B '-Dtest=es.urjc.code.daw.library.e2e.selenium.*Test' -Dhost="$HEROKU_APP.herokuapp.com" test
    
    
